
// ·ª®ng d·ª•ng React: Giao di·ªán nh·∫≠p li·ªáu v√† sinh prompt theo m·∫´u
import React, { useState } from "react";
import { Input } from "@/components/ui/input";
import { Select, SelectItem } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";

const promptTemplates = {
  "R-T-F": (role, task, format) => `B·∫°n l√† ${role}. H√£y ${task} d∆∞·ªõi d·∫°ng ${format}.`,
  "T-A-G": (task, audience, goal) => `Vi·∫øt ${task} cho ${audience} v·ªõi m·ª•c ti√™u l√† ${goal}.`,
  "C-I-S-C-O": (context, issue, solution, consequence, outcome) =>
    `Tr√¨nh b√†y: B·ªëi c·∫£nh: ${context}; V·∫•n ƒë·ªÅ: ${issue}; Gi·∫£i ph√°p: ${solution}; H·ªá qu·∫£ n·∫øu kh√¥ng x·ª≠ l√Ω: ${consequence}; K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c: ${outcome}.`,
  "P-A-S": (problem, agitation, solution) =>
    `V·∫•n ƒë·ªÅ: ${problem}. H·ªá qu·∫£ nghi√™m tr·ªçng: ${agitation}. Gi·∫£i ph√°p ƒë·ªÅ xu·∫•t: ${solution}.`,
  "A-I-D-A": (attention, interest, desire, action) =>
    `${attention} ${interest} ${desire} ${action}`
};

export default function PromptGenerator() {
  const [template, setTemplate] = useState("R-T-F");
  const [fields, setFields] = useState({});
  const [output, setOutput] = useState("");

  const handleChange = (field) => (e) => {
    setFields({ ...fields, [field]: e.target.value });
  };

  const generatePrompt = () => {
    const fn = promptTemplates[template];
    const values = Object.values(fields);
    const result = fn(...values);
    setOutput(result);
  };

  const fieldLabels = {
    "R-T-F": ["Vai tr√≤", "Nhi·ªám v·ª•", "ƒê·ªãnh d·∫°ng"],
    "T-A-G": ["T√°c v·ª•", "ƒê·ªëi t∆∞·ª£ng", "M·ª•c ti√™u"],
    "C-I-S-C-O": ["B·ªëi c·∫£nh", "V·∫•n ƒë·ªÅ", "Gi·∫£i ph√°p", "H·ªá qu·∫£", "K·∫øt qu·∫£"],
    "P-A-S": ["V·∫•n ƒë·ªÅ", "H·ªá qu·∫£", "Gi·∫£i ph√°p"],
    "A-I-D-A": ["Ch√∫ √Ω", "H·ª©ng th√∫", "Khao kh√°t", "H√†nh ƒë·ªông"]
  };

  return (
    <div className="p-6 max-w-3xl mx-auto space-y-6">
      <Card>
        <CardContent className="space-y-4">
          <h2 className="text-xl font-bold">üß† T·∫°o Prompt Theo M·∫´u</h2>

          <Select value={template} onValueChange={setTemplate}>
            {Object.keys(promptTemplates).map((key) => (
              <SelectItem key={key} value={key}>{key}</SelectItem>
            ))}
          </Select>

          {fieldLabels[template].map((label, idx) => (
            <Input
              key={idx}
              placeholder={label}
              onChange={handleChange(label)}
            />
          ))}

          <Button onClick={generatePrompt}>T·∫°o Prompt</Button>

          {output && (
            <Textarea value={output} rows={4} readOnly className="mt-4" />
          )}
        </CardContent>
      </Card>
    </div>
  );
}
